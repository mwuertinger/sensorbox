/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5-dev */

#ifndef PB_CONFIG_PB_H_INCLUDED
#define PB_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ConfigPb {
    uint32_t devId;
    char wlan_ssid[64];
    char wlan_password[64];
    char mqtt_addr[64];
    uint32_t mqtt_port;
    char mqtt_user[64];
    char mqtt_passwd[64];
    char mqtt_pubkey[1024];
} ConfigPb;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ConfigPb_init_default                    {0, "", "", "", 0, "", "", ""}
#define ConfigPb_init_zero                       {0, "", "", "", 0, "", "", ""}

/* Field tags (for use in manual encoding/decoding) */
#define ConfigPb_devId_tag                       1
#define ConfigPb_wlan_ssid_tag                   2
#define ConfigPb_wlan_password_tag               3
#define ConfigPb_mqtt_addr_tag                   4
#define ConfigPb_mqtt_port_tag                   5
#define ConfigPb_mqtt_user_tag                   6
#define ConfigPb_mqtt_passwd_tag                 7
#define ConfigPb_mqtt_pubkey_tag                 8

/* Struct field encoding specification for nanopb */
#define ConfigPb_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   devId,             1) \
X(a, STATIC,   SINGULAR, STRING,   wlan_ssid,         2) \
X(a, STATIC,   SINGULAR, STRING,   wlan_password,     3) \
X(a, STATIC,   SINGULAR, STRING,   mqtt_addr,         4) \
X(a, STATIC,   SINGULAR, UINT32,   mqtt_port,         5) \
X(a, STATIC,   SINGULAR, STRING,   mqtt_user,         6) \
X(a, STATIC,   SINGULAR, STRING,   mqtt_passwd,       7) \
X(a, STATIC,   SINGULAR, STRING,   mqtt_pubkey,       8)
#define ConfigPb_CALLBACK NULL
#define ConfigPb_DEFAULT NULL

extern const pb_msgdesc_t ConfigPb_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ConfigPb_fields &ConfigPb_msg

/* Maximum encoded size of messages (where known) */
#define ConfigPb_size                            1363

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
